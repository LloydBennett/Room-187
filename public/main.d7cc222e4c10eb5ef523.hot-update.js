"use strict";
self["webpackHotUpdateroom187"]("main",{

/***/ "./app/pages/About/index.js":
/*!**********************************!*\
  !*** ./app/pages/About/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ About)
/* harmony export */ });
/* harmony import */ var classes_Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classes/Page */ "./app/classes/Page.js");
/* harmony import */ var lenis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lenis */ "./node_modules/lenis/dist/lenis.mjs");
/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
/* harmony import */ var gsap_CustomEase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap/CustomEase */ "./node_modules/gsap/CustomEase.js");
/* harmony import */ var gsap_SplitText__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/SplitText */ "./node_modules/gsap/SplitText.js");
/* harmony import */ var components_TextSplit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! components/TextSplit */ "./app/components/TextSplit.js");
/* harmony import */ var utils_LenisScroll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils/LenisScroll */ "./app/utils/LenisScroll.js");







class About extends classes_Page__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor() {
    super({
      id: 'about',
      elements: {
        bioTrigger: '[data-bio-trigger]',
        close: '[data-bio-overlay-modal] [data-close]',
        bioOverlay: '[data-bio-overlay-modal]',
        bioContainer: '[data-bio-overlay-content]',
        body: 'body',
        imageCarousel: '[data-image-carousel]'
      }
    });
    gsap__WEBPACK_IMPORTED_MODULE_3__["default"].registerPlugin(gsap_CustomEase__WEBPACK_IMPORTED_MODULE_4__.CustomEase, gsap_SplitText__WEBPACK_IMPORTED_MODULE_5__.SplitText);
    gsap_CustomEase__WEBPACK_IMPORTED_MODULE_4__.CustomEase.create("zoom", "0.71, 0, 0.06, 1");
    this.pageScroll = utils_LenisScroll__WEBPACK_IMPORTED_MODULE_2__.scroll;
    this.isOpen = false;
    this.tl = new gsap__WEBPACK_IMPORTED_MODULE_3__["default"].timeline();
    this.mm = gsap__WEBPACK_IMPORTED_MODULE_3__["default"].matchMedia();
    this.addEventListeners();
  }
  onPopState() {
    this.onChange({
      url: window.location.pathname,
      push: false
    });
  }
  async onChange({
    url,
    push = true
  }) {
    if (push) {
      this.previousUrl = window.location.pathname;
      window.history.pushState({}, "", url);
    }
    const req = await window.fetch(url);
    if (req.status === 200) {
      const html = await req.text();
      const div = document.createElement('div');
      div.innerHTML = html;
      if (push) {
        window.history.pushState({}, "", url);
      }
      const divContent = div.querySelector('[data-inner-content]');
      this.elements.bioContainer.innerHTML = divContent.innerHTML;
      this.elements.bioImage = this.elements.bioContainer.querySelector('[data-bio-image]');
      this.elements.mainTitles = this.elements.bioContainer.querySelectorAll('[data-bio-overlay-modal] [data-hero] [data-text-reveal]');
      this.elements.bioText = this.elements.bioContainer.querySelector('.bio__content [data-split-text]');
      this.elements.bioRole = this.elements.bioContainer.querySelector('[data-bio-overlay-modal] .bio__role [data-split-text]');
      if (!this.modalScroll) {
        this.init();
      } else {
        this.modalScroll.resize();
      }
      this.setAnimationPositions();
      this.animateContent();
    }
  }
  removeContent() {
    this.elements.bioContainer.innerHTML = "";
  }
  openModal() {
    if (this.isOpen) return;
    this.pageScroll.stop();
    this.elements.body.classList.add('no-scrolling');
    this.tl.to(this.elements.bioOverlay, {
      clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",
      duration: 0.6,
      ease: "zoom"
    });
  }
  closeModal() {
    this.tl.to(this.elements.bioOverlay, {
      clipPath: "polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)",
      duration: 0.6,
      ease: "zoom",
      onComplete: () => {
        this.isOpen = false;
        this.setAnimationPositions();
        this.removeContent();
        this.pageScroll.start();
      }
    });
  }
  animateContent() {
    const tl = gsap__WEBPACK_IMPORTED_MODULE_3__["default"].timeline();
    this.tl.to(this.elements.mainTitles, {
      y: 0,
      duration: 0.8,
      ease: "zoom",
      stagger: (i, target) => target.dataset.textReveal ? 0.05 * Number(target.dataset.textReveal) : 0.05
    }, '-=0.3');
    this.tl.to(this.elements.bioRole, {
      y: 0,
      duration: 0.8,
      ease: "zoom"
    }, '-=0.6');
    document.fonts.ready.then(() => {
      const split = gsap_SplitText__WEBPACK_IMPORTED_MODULE_5__.SplitText.create(this.elements.bioText, {
        type: "lines",
        lineClass: "line",
        mask: "lines",
        autoSplit: true,
        onSplit: self => {
          return this.animateBodyText(this.elements.bioText, self.lines);
        }
      });
    });
    this.tl.to(this.elements.bioImage, {
      y: 0,
      opacity: 1,
      duration: 0.4,
      ease: "power2.out"
    }, '-=0.6');
    this.tl.to(this.elements.close, {
      opacity: 1,
      duration: 0.3,
      ease: "power2.out",
      onComplete: () => {
        this.isOpen = true;
        this.elements.body.classList.remove('no--scrolling');
        this.modalScroll.start();
      }
    }, '-=0.2');
  }
  animateBodyText(text, lines) {
    this.mm.add("(max-width: 1199px)", () => {
      components_TextSplit__WEBPACK_IMPORTED_MODULE_1__["default"].scrollAnimateText(text, lines);
      console.log('its working');
    });
    this.mm.add("(min-width: 1200px)", () => {
      this.tl.fromTo(lines, {
        y: "100%"
      }, {
        y: 0,
        duration: 0.8,
        ease: "zoom",
        stagger: 0.05
      }, '-=0.8');
    });
  }
  addEventListeners() {
    if (!this.elements.bioTrigger || !this.elements.close) return;
    this.elements.bioTrigger.forEach(l => {
      l.onclick = event => {
        event.preventDefault();
        const href = l.href;
        this.openModal();
        this.onChange({
          url: href
        });
      };
    });
    this.elements.close.addEventListener('click', () => {
      if (this.previousUrl) {
        window.history.replaceState({}, "", this.previousUrl);
      }
      this.closeModal();
    });
    window.addEventListener('popstate', this.onPopState.bind(this));
  }
  setAnimationPositions() {
    gsap__WEBPACK_IMPORTED_MODULE_3__["default"].set(this.elements.close, {
      opacity: 0
    });
    gsap__WEBPACK_IMPORTED_MODULE_3__["default"].set(this.elements.mainTitles, {
      y: "100%"
    });
    gsap__WEBPACK_IMPORTED_MODULE_3__["default"].set(this.elements.bioRole, {
      y: "100%"
    });
    gsap__WEBPACK_IMPORTED_MODULE_3__["default"].set(this.elements.bioImage, {
      y: "20%",
      opacity: 0
    });
  }
  init() {
    if (!this.elements.bioOverlay || !this.elements.bioContainer) {
      console.error("❌ Lenis Initialization Failed: Missing Elements", this.elements);
      return;
    }
    this.modalScroll = new lenis__WEBPACK_IMPORTED_MODULE_6__["default"]({
      wrapper: this.elements.bioOverlay,
      content: this.elements.bioContainer,
      autoRaf: true,
      duration: 1
    });
    const raf = time => {
      this.modalScroll.raf(time);
      requestAnimationFrame(raf);
    };
    requestAnimationFrame(raf);
    this.modalScroll.stop();
  }
}

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("35728893e6dbe68104c0")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,